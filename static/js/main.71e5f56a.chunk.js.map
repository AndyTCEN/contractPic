{"version":3,"sources":["components/CallContract.js","components/ConnectInfoComponent.js","components/SoldInfoComponent.js","components/OneBtnComponent.js","components/TwoInputOneBtnComponent.js","components/OneInputOneBtnComponent.js","components/App.js","serviceWorker.js","index.js"],"names":["CallContract","window","web3","eth","Contract","Nft","abi","address","mint","_x","_mint","apply","this","arguments","_callee","mintparameter","accountAddress","totalQuantity","price","gasfee","gaslimit","quantity","nft","regenerator_default","a","wrap","_context","prev","next","gaslimt","utils","isAddress","abrupt","alert","t0","methods","mintNFT","send","from","value","toWei","toString","gasPrice","gas","stop","mintToOther","_x2","_mintToOther","_callee2","parameter","to","_context2","toAddress","mintNFTToOther","approve","_x3","_approve","_callee3","_context3","account","withdraw","_x4","_withdraw","_callee4","_context4","flipSaleActive","_x5","_flipSaleActive","_callee5","_context5","isSaleActive","_isSaleActive","_callee6","result","_context6","call","sent","_isRevealed","CallContract_isRevealed2","_callee8","_context8","_revealed","totalSupply","_totalSupply","_callee9","_context9","balanceOf","_x7","_balanceOf","_callee10","owner","_context10","MAX_SUPPLY","_MAX_SUPPLY","_callee11","_context11","max_Balance","_max_Balance","_callee12","_context12","maxBalance","setMaxBalance","_x8","_setMaxBalance","_callee13","_context13","_Max_Mint","_Max_Mint2","_callee14","_context14","maxMint","_setMaxMint","_x9","CallContract_setMaxMint2","_callee15","_context15","setMaxMint","mint_Price","_mint_Price","_callee16","_context16","mintPrice","fromWei","setMintPrice","_x10","_setMintPrice","_callee17","_context17","ConnectInfoComponent","_Component","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","key","react_default","createElement","className","props","Account","onClick","ClickFun","Component","SoldInfoComponent","MaxSupply","SoldOutAmount","RemainAmount","OneBtnComponent","Titel","SoldPrice","Descript","BtnTxt","TwoInputOneBtnComponent","Status","Input1_Descript","type","Input1_Type","name","Input1_Name","onChange","Input1_ChangeFun","Input2_Descript","Input2_Type","Input2_Name","Input2_ChangeFun","OneInputOneBtnComponent","App","_this","state","owneraccount","isRevealed","setmintPrice","toQuantity","balanceQuantity","Max_Balance","MAX_Mint","setMax_Mint","setMaxBalanceQuantity","connectShowable","mintShowable","controlShowable","bind","assertThisInitialized","MAXSUPPLY","mintTo","connect","flipReveal","handleInputChange","OwnerbalanceOf","loadWeb3","MaxMint","MAXBalance","ethereum","Web3","currentProvider","setState","request","method","accounts","on","_this2","quan","mintToparameter","approveparameter","flipRevealparameter","flipSaleActiveparameter","OwnerbalanceOfparameter","setMintPriceparameter","setMaxBalanceparameter","setMaxMintparameter","e","preventDefault","ta","target","input","defineProperty","_this3","style","maxwidth","margintop","id","components_ConnectInfoComponent","components_SoldInfoComponent","margin","components_OneBtnComponent","components_TwoInputOneBtnComponent","components_OneInputOneBtnComponent","Boolean","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.71e5f56a.chunk.js","sourcesContent":["import Nft from '../truffle_abis/Nft.json';\r\n\r\nfunction CallContract() {\r\n    return (\r\n      new window.web3.eth.Contract(Nft.abi,Nft.address)\r\n    )\r\n}\r\n\r\nexport async function mint(mintparameter){\r\nconst accountAddress=mintparameter.accountAddress;\r\nconst totalQuantity=mintparameter.totalQuantity;\r\nconst price=mintparameter.price;\r\nconst gasfee=mintparameter.gasfee\r\nconst gaslimit=mintparameter.gaslimt;\r\nconst web3=window.web3;\r\nif(!web3.utils.isAddress(accountAddress)||totalQuantity<1||price===0){\r\n  return alert(\"System Error\")\r\n}\r\n  let quantity=0;\r\n  switch(totalQuantity){\r\n  case 1:\r\n    quantity=1;\r\n    break;\r\n  case 5:\r\n    quantity=6;\r\n    break;\r\n  case 10:\r\n      quantity=13;\r\n    break;  \r\n}\r\n  const nft=CallContract();\r\n  await nft.methods.mintNFT(quantity).send({\r\n    from: accountAddress,\r\n    value: web3.utils.toWei(price.toString(), 'ether'),\r\n    //gas fee limit 設定\r\n    gasPrice:gaslimit,\r\n    //gas fee 設定\r\n    gas:gasfee\r\n  });\r\n}\r\n\r\n\r\nexport async function mintToOther(parameter){\r\n  const accountAddress=parameter.accountAddress;\r\n  const totalQuantity=parameter.totalQuantity;\r\n  const to=parameter.toAddress;\r\n  const gasfee=parameter.gasfee\r\n  const gaslimit=parameter.gaslimt;\r\n  const web3=window.web3;  \r\n  if(!web3.utils.isAddress(accountAddress)||totalQuantity<1||!web3.utils.isAddress(to)){\r\n    return alert(\"System Error\")\r\n  }   \r\n    const nft=CallContract();\r\n    await nft.methods.mintNFTToOther(totalQuantity,to).send({\r\n      from: accountAddress,            \r\n      gasPrice:gaslimit,      \r\n      gas:gasfee\r\n    });\r\n  }\r\n  \r\nexport async function approve(parameter){\r\n  const nft=CallContract();\r\n  const accountAddress=parameter.account;  \r\n  const gasfee=parameter.gasfee;\r\n  const gaslimit=parameter.gaslimt;\r\n  await nft.methods.approve(accountAddress,0).send({\r\n      from: accountAddress,\r\n      gasPrice:gaslimit,      \r\n      gas:gasfee      \r\n    });  \r\n}\r\n\r\nexport async function withdraw(parameter){\r\n  const nft=CallContract();\r\n  const accountAddress=parameter.account;  \r\n  const gasfee=parameter.gasfee;\r\n  const gaslimit=parameter.gaslimt;\r\n  await nft.methods.withdraw(accountAddress).send({\r\n      from: accountAddress,\r\n      gasPrice:gaslimit,      \r\n      gas:gasfee      \r\n    });  \r\n}\r\n\r\nexport async function flipSaleActive(parameter){\r\n  const nft=CallContract();\r\n  const accountAddress=parameter.account;  \r\n  const gasfee=parameter.gasfee;\r\n  const gaslimit=parameter.gaslimt;  \r\n  await nft.methods.flipSaleActive().send({\r\n    from: accountAddress,\r\n    gasPrice:gaslimit,      \r\n    gas:gasfee      \r\n  })\r\n}\r\n\r\nexport async function isSaleActive(){\r\n  const nft=CallContract();\r\n  let result=await nft.methods._isSaleActive().call()\r\n  return result;\r\n}\r\n\r\nexport async function flipReveal(parameter){\r\n  const nft=CallContract();\r\n  const accountAddress=parameter.account;  \r\n  const gasfee=parameter.gasfee;\r\n  const gaslimit=parameter.gaslimt;\r\n  await nft.methods.flipReveal().send({\r\n    from: accountAddress,\r\n    gasPrice:gaslimit,      \r\n    gas:gasfee      \r\n  })\r\n}\r\n\r\nexport async function _isRevealed(){\r\n  const nft=CallContract();\r\n  let result=await nft.methods._revealed().call()\r\n  return result;\r\n}\r\n\r\nexport async function totalSupply(){\r\n  const nft=CallContract();\r\n  let result=await nft.methods.totalSupply().call()\r\n  return result;\r\n}\r\n\r\nexport async function balanceOf(parameter){\r\n  const nft=CallContract();\r\n  const owner=parameter.owner\r\n  const web3=window.web3;   \r\n  if(!web3.utils.isAddress(owner)){\r\n    return alert(\"System Error\")\r\n  }   \r\n  let result=await nft.methods.balanceOf(owner).call()\r\n  return result;\r\n}\r\n\r\nexport async function MAX_SUPPLY(){\r\n  const nft=CallContract();\r\n  let result=await nft.methods.MAX_SUPPLY().call()\r\n  return result;\r\n}\r\n\r\n\r\nexport async function max_Balance(){\r\n  const nft=CallContract();\r\n  let result=await nft.methods.maxBalance().call()\r\n  return result;\r\n}\r\n\r\nexport async function setMaxBalance(parameter){\r\n  const nft=CallContract();\r\n  const accountAddress=parameter.account;\r\n  const totalQuantity=parameter.totalQuantity;    \r\n  const gasfee=parameter.totalQuantity;\r\n  const gaslimit=parameter.gaslimt;\r\n  await nft.methods.setMaxBalance(totalQuantity).send({\r\n    from: accountAddress,\r\n    gasPrice:gaslimit,      \r\n    gas:gasfee      \r\n  })\r\n}\r\n\r\nexport async function _Max_Mint(){\r\n  const nft=CallContract();\r\n  let result=await nft.methods.maxMint().call()\r\n  return result;\r\n}\r\n\r\nexport async function _setMaxMint(parameter){\r\n  const nft=CallContract();\r\n  const accountAddress=parameter.account;\r\n  const totalQuantity=parameter.totalQuantity;    \r\n  const gasfee=parameter.gasfee;\r\n  const gaslimit=parameter.gaslimt;\r\n  await nft.methods.setMaxMint(totalQuantity).send({\r\n    from: accountAddress,\r\n    gasPrice:gaslimit,      \r\n    gas:gasfee      \r\n  })\r\n}\r\n\r\nexport async function mint_Price(){\r\n  const nft=CallContract();\r\n  const price=await nft.methods.mintPrice().call()  \r\n  let result=window.web3.utils.fromWei(price)  \r\n  return result;\r\n}\r\n\r\nexport async function setMintPrice(parameter){\r\n  const nft=CallContract();\r\n  const accountAddress=parameter.account;\r\n  const price=window.web3.utils.toWei(parameter.price);    \r\n  const gasfee=parameter.gasfee;\r\n  const gaslimit=parameter.gaslimt;\r\n  await nft.methods.setMintPrice(price).send({\r\n    from: accountAddress,\r\n    gasPrice:gaslimit,      \r\n    gas:gasfee      \r\n  })\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport class ConnectInfoComponent extends Component {    \r\n  render() {\r\n    return (\r\n        <div className='container'>\r\n        <div className=\"row justify-content-center\">\r\n          <div className=\"col-md-8\">\r\n       <p className=''>Address: {this.props.Account}</p>\r\n       <button\r\n       className='btn btn-secondary mt-3 mt-md-4 px-4' \r\n       onClick={this.props.ClickFun} >Connect to MetaMask</button>\r\n       </div>       \r\n       <div className=\"col-md-4\">\r\n       \r\n       </div>\r\n       </div>\r\n       </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ConnectInfoComponent\r\n","import React, { Component } from 'react'\r\n\r\nexport class SoldInfoComponent extends Component {\r\n  render() {\r\n    return (\r\n        <ul className=\"w3-ul w3-border w3-white w3-text-grey\">\r\n        <li className=\"w3-padding w3-xxxlarge\">發行總數 <span className=\"w3-tag w3-teal w3-xxxlarge w3-margin-left\">{this.props.MaxSupply}</span></li>\r\n        <li className=\"w3-padding w3-xxxlarge\">賣出數量 <span className=\"w3-tag w3-blue w3-xxxlarge w3-margin-left\">{this.props.SoldOutAmount}</span></li>\r\n        <li className=\"w3-padding w3-xxxlarge\">剩餘數量 <span className=\"w3-tag w3-red w3-xxxlarge w3-margin-left\">{this.props.RemainAmount}</span></li>\r\n      </ul>\r\n    )\r\n  }\r\n}\r\n\r\nexport default SoldInfoComponent\r\n","import React, { Component } from 'react'\r\n\r\nexport class OneBtnComponent extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"w3-third w3-margin-bottom\">        \r\n        <div className=\"w3-container w3-white\">\r\n          <p><b>{this.props.Titel}</b></p>\r\n          <p className=\"w3-opacity\">{this.props.SoldPrice}</p>\r\n          <p>{this.props.Descript}</p>\r\n          <button \r\n          className=\"w3-button w3-black w3-margin-bottom\"\r\n          onClick={this.props.ClickFun}\r\n          >{this.props.BtnTxt}</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OneBtnComponent\r\n","import React, { Component } from 'react'\r\n\r\nexport class TwoInputOneBtnComponent extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"w3-border w3-margin-bottom\">        \r\n        <div className=\"w3-container w3-white\">\r\n          <p><b>{this.props.Titel}</b></p>\r\n          <p className=\"w3-opacity\">{this.props.Status}</p>\r\n          <p>{this.props.Input1_Descript}</p>          \r\n          <input \r\n          className='w3-input'\r\n          type={this.props.Input1_Type}\r\n          name={this.props.Input1_Name}            \r\n          onChange={this.props.Input1_ChangeFun} \r\n          />\r\n          <p>{this.props.Input2_Descript}</p>\r\n          <input \r\n          className='w3-panel w3-round-large'\r\n          type={this.props.Input2_Type}\r\n          name={this.props.Input2_Name}            \r\n          onChange={this.props.Input2_ChangeFun} \r\n          />\r\n          <br/>\r\n          <button \r\n          className=\"w3-button w3-black w3-margin-bottom\"\r\n          onClick={this.props.ClickFun}\r\n          >{this.props.BtnTxt}</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TwoInputOneBtnComponent\r\n","import React, { Component } from 'react'\r\n\r\nexport class OneInputOneBtnComponent extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"w3-third w3-margin-bottom\">        \r\n        <div className=\"w3-container w3-white\">\r\n          <p><b>{this.props.Titel}</b></p>\r\n          <p className=\"w3-opacity\">{this.props.Status}</p>\r\n          <p>{this.props.Input1_Descript}</p>          \r\n          <input \r\n          className='w3-panel w3-round-large'\r\n          type={this.props.Input1_Type}\r\n          name={this.props.Input1_Name}            \r\n          onChange={this.props.Input1_ChangeFun} \r\n          />         \r\n          <br/>\r\n          <button \r\n          className=\"w3-button w3-black w3-margin-bottom\"\r\n          onClick={this.props.ClickFun}\r\n          >{this.props.BtnTxt}</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default OneInputOneBtnComponent\r\n","import React, { Component } from 'react'\r\nimport Web3 from 'web3'\r\nimport {mint,isSaleActive,totalSupply,approve,mintToOther,flipSaleActive,withdraw,_isRevealed,balanceOf,MAX_SUPPLY,setMaxBalance,max_Balance,_Max_Mint,_setMaxMint,mint_Price,setMintPrice} from './CallContract';\r\nimport ConnectInfoComponent from './ConnectInfoComponent';\r\nimport SoldInfoComponent from './SoldInfoComponent';\r\nimport OneBtnComponent from './OneBtnComponent';\r\nimport TwoInputOneBtnComponent from './TwoInputOneBtnComponent';\r\nimport OneInputOneBtnComponent from './OneInputOneBtnComponent';\r\n\r\n\r\nclass App extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      account:'0x0',\r\n      owneraccount:'0x0',\r\n      isSaleActive:'',\r\n      isRevealed:'',\r\n      toAddress:'',\r\n      mintPrice:0,\r\n      setmintPrice:0,\r\n      toQuantity:0,\r\n      balanceQuantity:0,\r\n      totalSupply:0,\r\n      MAX_SUPPLY:0,\r\n      Max_Balance:0,\r\n      MAX_Mint:0,\r\n      setMax_Mint:0,\r\n      setMaxBalanceQuantity:0,\r\n      connectShowable:true,\r\n      mintShowable:false,\r\n      controlShowable:false     \r\n    };    \r\n    this.gasfee=450000;\r\n    this.gaslimit='1000000000';\r\n    this.isSaleActive=this.isSaleActive.bind(this);\r\n    this.isRevealed=this.isRevealed.bind(this);\r\n    this.MAXSUPPLY=this.MAXSUPPLY.bind(this);\r\n    this.setMaxBalance=this.setMaxBalance.bind(this);\r\n    this.mint=this.mint.bind(this); \r\n    this.mintTo=this.mintTo.bind(this);\r\n    this.connect=this.connect.bind(this); \r\n    this.approve=this.approve.bind(this);\r\n    this.flipReveal=this.flipReveal.bind(this);\r\n    this.flipSaleActive=this.flipSaleActive.bind(this);\r\n    this.handleInputChange=this.handleInputChange.bind(this);\r\n    this.withdraw=this.withdraw.bind(this);\r\n    this.OwnerbalanceOf=this.OwnerbalanceOf.bind(this); \r\n    this.setMintPrice=this.setMintPrice.bind(this);   \r\n    this.setMaxMint=this.setMaxMint.bind(this);\r\n  }\r\n\r\n  async componentWillMount() {\r\n    await this.loadWeb3()\r\n    if(this.state.connectShowable)\r\n    this.connect();\r\n    await this.MAXSUPPLY();\r\n    await this.MaxMint();\r\n    await this.MAXBalance();\r\n    await this.totalSupply();\r\n    await this.mintPrice();\r\n    await this.isRevealed();\r\n    await this.isSaleActive();\r\n  }\r\n\r\n  \r\n\r\n  async loadWeb3(){\r\n  if(window.ethereum){\r\n    window.web3=new Web3(window.ethereum)\r\n  }\r\n  else if (window.web3) {\r\n    window.web3 = new Web3(window.web3.currentProvider)\r\n  }\r\n  else {\r\n    this.setState({connectShowable:false});\r\n    window.alert('Non ethereum browser detected. You should consider Metamask!')\r\n  }\r\n  }  \r\n  \r\n  \r\n  async connect() {\r\n    const eth=window.ethereum;\r\n    const accounts=await eth.request({method:'eth_requestAccounts'});  \r\n    this.setState({account:accounts[0]});\r\n    eth.on('accountsChanged',(accounts) => {\r\n      this.setState({account:accounts[0]});\r\n    })\r\n\r\n  }\r\n\r\n\r\n  async mint(quan) {\r\n    const accounts = this.state.account;\r\n    const quantity=quan;\r\n    const price=this.state.mintPrice*quantity;    \r\n    const mintparameter={\r\n      accountAddress:accounts,\r\n      totalQuantity:quantity,\r\n      price:price,      \r\n      gasfee:this.gasfee,\r\n      gaslimt:this.gaslimit,\r\n    }\r\n    await mint(mintparameter)\r\n  }\r\n\r\n  async mintTo() {\r\n    const accounts = this.state.account;         \r\n    const mintToparameter={\r\n      accountAddress:accounts,\r\n      totalQuantity:this.state.toQuantity,\r\n      toAddress:this.state.toAddress,\r\n      gasfee:this.gasfee,\r\n      gaslimt:this.gaslimit,\r\n    }\r\n    await mintToOther(mintToparameter)\r\n  }\r\n\r\n\r\n  async totalSupply(){    \r\n    const result=await totalSupply();\r\n    this.setState({totalSupply:result})\r\n  }\r\n\r\n  async isSaleActive(){    \r\n    const result=await isSaleActive();\r\n    this.setState({isSaleActive:result?'開啟':'關閉'})\r\n  }\r\n\r\n  async isRevealed(){    \r\n    const result=await _isRevealed();\r\n    this.setState({isRevealed:result?'開啟':'關閉'})\r\n  }\r\n\r\n  async approve(){\r\n    const accounts=this.state.account    \r\n    const approveparameter={\r\n      account:accounts,\r\n      gasfee:this.gasfee,\r\n      gaslimt:this.gaslimit,\r\n    }\r\n    await approve(approveparameter);\r\n  }\r\n\r\n  async withdraw(){\r\n    const accounts=this.state.account    \r\n    const approveparameter={\r\n      account:accounts,\r\n      gasfee:this.gasfee,\r\n      gaslimt:this.gaslimit,\r\n    }\r\n    await withdraw(approveparameter);\r\n  }\r\n\r\n  async flipReveal(){\r\n    const accounts=this.state.account    \r\n    const flipRevealparameter={\r\n      account:accounts,\r\n      gasfee:this.gasfee,\r\n      gaslimt:this.gaslimit,\r\n    }\r\n    await approve(flipRevealparameter);\r\n    await this.isRevealed();\r\n  }\r\n\r\n  async flipSaleActive(){\r\n    const accounts=this.state.account    \r\n    const flipSaleActiveparameter={\r\n      account:accounts,\r\n      gasfee:this.gasfee,\r\n      gaslimt:this.gaslimit,\r\n    }    \r\n    await flipSaleActive(flipSaleActiveparameter);\r\n    await this.isSaleActive();    \r\n  }\r\n\r\n  async OwnerbalanceOf(){  \r\n    const OwnerbalanceOfparameter={\r\n      owner:this.state.owneraccount \r\n    }     \r\n    const result=await balanceOf(OwnerbalanceOfparameter);\r\n    this.setState({balanceQuantity:result})\r\n  }\r\n\r\n  async mintPrice(){\r\n    const result=await mint_Price();\r\n    this.setState({mintPrice:result})\r\n  }\r\n  async setMintPrice(){\r\n    const accounts=this.state.account    \r\n    const setMintPriceparameter={\r\n      account:accounts,\r\n      price:this.state.setmintPrice,\r\n      gasfee:this.gasfee,\r\n      gaslimt:this.gaslimit,\r\n    }\r\n    await setMintPrice(setMintPriceparameter);\r\n    await this.mintPrice();    \r\n  }\r\n\r\n\r\n  async MAXSUPPLY(){\r\n    const result=await MAX_SUPPLY();\r\n    this.setState({MAX_SUPPLY:result})\r\n  }\r\n\r\n  async MAXBalance(){\r\n    const result=await max_Balance();\r\n    this.setState({Max_Balance:result})\r\n  }\r\n\r\n  async setMaxBalance(){\r\n    const accounts=this.state.account    \r\n    const setMaxBalanceparameter={\r\n      account:accounts,\r\n      totalQuantity:this.state.setMaxBalanceQuantity,\r\n      gasfee:this.gasfee,\r\n      gaslimt:this.gaslimit,\r\n    }\r\n    await setMaxBalance(setMaxBalanceparameter);\r\n    await this.MAXBalance();    \r\n  }\r\n\r\n  async MaxMint(){\r\n    const result=await _Max_Mint();\r\n    this.setState({MAX_Mint:result})\r\n  }\r\n\r\n  async setMaxMint(){\r\n    const accounts=this.state.account    \r\n    const setMaxMintparameter={\r\n      account:accounts,\r\n      totalQuantity:this.state.setMax_Mint,\r\n      gasfee:this.gasfee,\r\n      gaslimt:this.gaslimit,\r\n    }\r\n    await _setMaxMint(setMaxMintparameter);\r\n    await this.MaxMint();    \r\n  }\r\n  \r\n\r\n  handleInputChange(e){\r\n    e.preventDefault();\r\n    const ta=e.target;\r\n    const input=ta.value;\r\n    const name=ta.name;    \r\n    this.setState({[name]:input});\r\n  } \r\n\r\n\r\nrender(){\r\n  return (\r\n    <div className=\"App\">\r\n<div className=\"w3-content\" style={{maxwidth:'2000px',margintop:'46px'}}>\r\n\r\n  <div className=\"w3-black\" id=\"tour\">\r\n    <div className=\"w3-container w3-content w3-padding-64\" style={{maxwidth:'800px'}}>\r\n    <ConnectInfoComponent Account={this.state.account} ClickFun={this.connect}/>\r\n\r\n      <h2 className=\"w3-wide w3-center\">Mint</h2>\r\n      <p className=\"w3-opacity w3-center\"><i>Remember to book your tickets!</i></p><br/>\r\n      <SoldInfoComponent \r\n     MaxSupply={this.state.MAX_SUPPLY}\r\n     SoldOutAmount={this.state.totalSupply}\r\n     RemainAmount={this.state.MAX_SUPPLY-this.state.totalSupply}\r\n     />\r\n      \r\n\r\n      <div className=\"w3-row-padding w3-padding-32\" style={{margin:'0-16px'}}>\r\n        <OneBtnComponent\r\n        Titel={'Mint 1個'}\r\n        SoldPrice={'售價：'+this.state.mintPrice*1+ 'ETH'}\r\n        ClickFun={()=>this.mint(1)}\r\n        Descript={'一個剛剛好！'}\r\n        BtnTxt={'Mint'}\r\n        />\r\n        <OneBtnComponent\r\n        Titel={'Mint 5+1個'}\r\n        SoldPrice={'售價：'+this.state.mintPrice*5+ 'ETH'}\r\n        ClickFun={()=>this.mint(5)}\r\n        Descript={'特惠!買五送一!'}\r\n        BtnTxt={'Mint 5+1'}\r\n        />\r\n        <OneBtnComponent\r\n        Titel={'Mint 10+3個'}\r\n        SoldPrice={'售價：'+this.state.mintPrice*10+ 'ETH'}\r\n        ClickFun={()=>this.mint(10)}\r\n        Descript={'特惠!買五送一!'}\r\n        BtnTxt={'Mint 10+3'}\r\n        />       \r\n      </div>\r\n    </div>\r\n\r\n    <div className=\"w3-container w3-content w3-padding-64\" style={{maxwidth:'800px'}}>\r\n    \r\n\r\n      <h2 className=\"w3-wide w3-center\">後台操作</h2>           \r\n\r\n      <div className=\"w3-row-padding w3-padding-32\" style={{margin:'0-16px'}}>\r\n        <TwoInputOneBtnComponent\r\n        Titel={'空投'}        \r\n        Input1_Descript={'輸入空投地址'}\r\n        Input1_Type={'text'}\r\n        Input1_Name={'toAddress'}        \r\n        Input1_ChangeFun={this.handleInputChange}\r\n        Input2_Descript={'輸入空投數量'}\r\n        Input2_Type={'Number'}\r\n        Input2_Name={'toQuantity'}               \r\n        Input2_ChangeFun={this.handleInputChange}\r\n        ClickFun={this.mintTo}       \r\n        BtnTxt={'空投'}\r\n        />\r\n        <OneInputOneBtnComponent\r\n        Titel={'設定Mint價格'}\r\n        Status={'現在價格'+this.state.mintPrice+'Eth'}\r\n        Input1_Descript={'輸入Mint價格'}\r\n        Input1_Type={'text'}\r\n        Input1_Name={'setmintPrice'}        \r\n        Input1_ChangeFun={this.handleInputChange}\r\n        ClickFun={this.setMintPrice}       \r\n        BtnTxt={'修改'}\r\n        />\r\n\r\n        <OneInputOneBtnComponent\r\n        Titel={'設定一次Mint數量上限'}\r\n        Status={'現在數量上限'+this.state.MAX_Mint}\r\n        Input1_Descript={'輸入Mint上限'}\r\n        Input1_Type={'text'}\r\n        Input1_Name={'setMax_Mint'}        \r\n        Input1_ChangeFun={this.handleInputChange}\r\n        ClickFun={this.setMaxBalance}       \r\n        BtnTxt={'修改'}\r\n        />\r\n\r\n        <OneInputOneBtnComponent\r\n        Titel={'設定持有NFT數量上限'}\r\n        Status={'現在數量上限'+this.state.Max_Balance}\r\n        Input1_Descript={'輸入NFT數量上限'}\r\n        Input1_Type={'text'}\r\n        Input1_Name={'setMaxBalanceQuantity'}        \r\n        Input1_ChangeFun={this.handleInputChange}\r\n        ClickFun={this.setMaxMint}       \r\n        BtnTxt={'修改'}\r\n        />\r\n\r\n        <TwoInputOneBtnComponent\r\n        Titel={'查詢持有數量'}        \r\n        Input1_Descript={'輸入查詢地址'}\r\n        Input1_Type={'text'}\r\n        Input1_Name={'owneraccount'}        \r\n        Input1_ChangeFun={this.handleInputChange}\r\n        Input2_Descript={'持有數量：'+this.state.balanceQuantity}\r\n        Input2_Type={'hidden'}        \r\n        ClickFun={this.OwnerbalanceOf}       \r\n        BtnTxt={'查詢'}\r\n        />\r\n        <OneBtnComponent\r\n        Titel={'盲盒開啟/關閉'}\r\n        SoldPrice={'現在狀態：'+this.state.isRevealed}\r\n        ClickFun={()=>this.flipReveal()}\r\n        Descript={'盲盒開啟/關閉'}\r\n        BtnTxt={'開啟/關閉'}\r\n        />\r\n        <OneBtnComponent\r\n        Titel={'銷售開啟/關閉'}\r\n        SoldPrice={'現在狀態：'+this.state.isSaleActive}\r\n        ClickFun={()=>this.flipSaleActive()}\r\n        Descript={'銷售開啟/關閉'}\r\n        BtnTxt={'開啟/關閉'}\r\n        />\r\n        <OneBtnComponent\r\n        Titel={'金錢轉出'}\r\n        SoldPrice={'金錢轉出'}\r\n        ClickFun={()=>this.withdraw()}\r\n        Descript={'金錢轉出'}\r\n        BtnTxt={'轉出'}\r\n        />  \r\n      </div>\r\n    </div>\r\n  </div>  \r\n\r\n \r\n  </div>  \r\n</div>\r\n);\r\n}\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.css'\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}